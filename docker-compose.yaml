# MODE=DEV docker-compose up
#
# Access using fakeservices.datajoint.io
version: '2.4'
services:
  pharus:
    image: jverswijver/pharus:0.2.3.beta.9
    environment:
      API_SPEC_PATH: /main/specs/config.yaml # for dynamic api spec
      PHARUS_MODE: ${MODE}  # DEV | PROD
      PHARUS_PRIVATE_KEY:  # Setting this ensures that bearer tokens will remain valid across restart
      PHARUS_PUBLIC_KEY:  # Setting this ensures that bearer tokens will remain valid across restart
    volumes:
      - ./config.yaml:/main/specs/config.yaml:ro #copy the spec over to /main/specs/YOUR_SPEC_NAME
    command:
      - sh
      - -c
      - |
        pharus_update() {
            [ -z "$$PRIMARY_PID" ] || kill $$PRIMARY_PID
            if [ "$$PHARUS_MODE" == "DEV" ]; then
                export DEBUG=1
                export FLASK_ENV=development
                pharus &
            else
                gunicorn --bind 0.0.0.0:$${PHARUS_PORT} pharus.server:app &
            fi
            PRIMARY_PID=$$!
        }
        export PHARUS_PRIVATE_KEY=$$(echo $$PHARUS_PRIVATE_KEY | sed 's|\\n|\n|g')
        pharus_update
        echo "[$$(date -u '+%Y-%m-%d %H:%M:%S')][DataJoint]: Monitoring Pharus updates..."
        INIT_TIME=$$(date +%s)
        LAST_MOD_TIME=$$(date -r $$API_SPEC_PATH +%s)
        DELTA=$$(expr $$LAST_MOD_TIME - $$INIT_TIME)
        while true; do
           CURR_LAST_MOD_TIME=$$(date -r $$API_SPEC_PATH +%s)
           CURR_DELTA=$$(expr $$CURR_LAST_MOD_TIME - $$INIT_TIME)
           if [ "$$DELTA" -lt "$$CURR_DELTA" ]; then
               echo "[$$(date -u '+%Y-%m-%d %H:%M:%S')][DataJoint]: Reloading Pharus since \`$$API_SPEC_PATH\` changed."
               pharus_update
               DELTA=$$CURR_DELTA
           else
               sleep 2
           fi
        done
    # ports:
    # - "5000:5000"
    networks:
      - main
  sci-viz:
    image: jverswijver/sciviz:0.1.2-beta.8
    environment:
      - CHOKIDAR_USEPOLLING=true
      - REACT_APP_DJLABBOOK_BACKEND_PREFIX=/api
      - FRONTEND_SPEC_PATH=config.yaml
      - SCIVIZ_MODE=${MODE}  # DEV | PROD
    volumes:
      - ./config.yaml:/main/config.yaml:ro
    # ports:
    #   - "3000:3000"
    command:
      - sh
      - -c
      - |
        sciviz_update() {
            sleep 3  # delaying to ensure pharus is up
            [ -z "$$PRIMARY_PID" ] || kill $$PRIMARY_PID
            if [ "$$SCIVIZ_MODE" == "DEV" ]; then
                python frontend_gen.py
                yarn run start &
            else
                rm -R /usr/share/nginx/html
                python frontend_gen.py
                yarn build
                mv ./build /usr/share/nginx/html
                nginx -g "daemon off;" &
            fi
            PRIMARY_PID=$$!
        }
        sciviz_update
        echo "[$$(date -u '+%Y-%m-%d %H:%M:%S')][DataJoint]: Monitoring SciViz updates..."
        INIT_TIME=$$(date +%s)
        LAST_MOD_TIME=$$(date -r $$FRONTEND_SPEC_PATH +%s)
        DELTA=$$(expr $$LAST_MOD_TIME - $$INIT_TIME)
        while true; do
           CURR_LAST_MOD_TIME=$$(date -r $$FRONTEND_SPEC_PATH +%s)
           CURR_DELTA=$$(expr $$CURR_LAST_MOD_TIME - $$INIT_TIME)
           if [ "$$DELTA" -lt "$$CURR_DELTA" ]; then
               echo "[$$(date -u '+%Y-%m-%d %H:%M:%S')][DataJoint]: Reloading SciViz since \`$$FRONTEND_SPEC_PATH\` changed."
               sciviz_update
               DELTA=$$CURR_DELTA
           else
               sleep 2
           fi
        done
    networks:
      - main
  fakeservices.datajoint.io:
    image: datajoint/nginx:v0.0.19
    environment:
      - ADD_pharus_TYPE=REST
      - ADD_pharus_ENDPOINT=pharus:5000
      - ADD_pharus_PREFIX=/api
      - ADD_sciviz_TYPE=REST
      - ADD_sciviz_ENDPOINT=sci-viz:3000
      - ADD_sciviz_PREFIX=/
      - HTTPS_PASSTHRU=TRUE
    ports:
      - "443:443"
      - "80:80"
    networks:
      - main
networks:
  main: